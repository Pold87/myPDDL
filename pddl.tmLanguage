<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>pddl</string>
	</array>
	<key>name</key>
	<string>PDDL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#domain</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#problem</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#inits</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#other-keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#language-constant</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#requirement</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constant</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#predicates</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#new-functions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#action-keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#action</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#durative-action</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>action</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:action))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Action</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typed-variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action-keyword</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#built-in-var</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>action-keyword</key>
		<dict>
			<key>match</key>
			<string>:(?i:parameters|vars|precondition|effect)\b</string>
			<key>name</key>
			<string>keyword.operator.pddl</string>
		</dict>
		<key>any-sexpr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\(.*\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>applied-predicate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>built-in-var</key>
		<dict>
			<key>match</key>
			<string>\?duration</string>
			<key>name</key>
			<string>variable.language.pddl</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.pddl</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Comments beginning with ';'</string>
			<key>match</key>
			<string>(;).*$\n?</string>
			<key>name</key>
			<string>comment.line.semicolon.pddl</string>
		</dict>
		<key>connected-predicate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((and|or|eq|neq|not)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Predicates that are connected via and, or, etc.</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#connected-predicate-other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>connected-predicate-other</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((and|or|eq|neq|not)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Predicates that are connected via and, or, etc.</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:constants))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Constants</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>support.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>((\s*\w+\s*)+)(-)\s*(\w+)\s*</string>
							<key>name</key>
							<string>meta.keyword.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>domain</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((\b(?i:define)\b)(?!\s+\(problem)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function-type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>domain/problem definition &lt;domain&gt; &lt;problem&gt; </string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.function.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.function.pddl</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>entity.name.class.pddl</string>
								</dict>
								<key>8</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s+(\()(\b(?i:(domain))\b)(\s*)((\w|\-|\!|\?)*)(\s*)((\w|\-)*)</string>
							<key>name</key>
							<string>meta.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>durative-action</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:durative-action))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Durative Action</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typed-variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action-keyword</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#built-in-var</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>durative-action-keyword</key>
		<dict>
			<key>match</key>
			<string>:(?i:parameters|vars|duration|condition|effect)\b</string>
			<key>name</key>
			<string>keyword.operator.pddl</string>
		</dict>
		<key>either</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(-)\s+\((either)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.pddl</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.pddl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.pddl</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.other.pddl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\(\w+(\s+(\?\w+\s*)+(-\s+(\w+))?)*\)\s+-\s+(\w+)</string>
			<key>name</key>
			<string>meta.type.pddl</string>
		</dict>
		<key>function-keyword</key>
		<dict>
			<key>match</key>
			<string>(assign|scale-up|scale-down|increase|decrease)</string>
			<key>name</key>
			<string>support.function.pddl</string>
		</dict>
		<key>function-with-either</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((\w+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\)\s+-\s+((?:\w|-)+))|\)</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>-\s+((?:\w|-)+)</string>
							<key>name</key>
							<string>meta.name.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:functions))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Functions</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#new-function</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\((either)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.type.pddl</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#pddl-expr</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>init-predicate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#number</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>inits</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:init))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Initalized predicates</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#init-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keyword</key>
		<dict>
			<key>match</key>
			<string>:(objects|constraints|metric|length)</string>
			<key>name</key>
			<string>storage.type.pddl</string>
		</dict>
		<key>language-constant</key>
		<dict>
			<key>match</key>
			<string>(start|end|all)</string>
			<key>name</key>
			<string>constant.language.pddl</string>
		</dict>
		<key>new-function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\)\s+-\s+((?:\w|-)+))</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>-\s+((?:\w|-)+)</string>
							<key>name</key>
							<string>meta.name.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>new-functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:functions))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Functions</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#either</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#new-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>new-predicate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>-\s+((?:\w|-)+)</string>
							<key>name</key>
							<string>meta.name.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.pddl</string>
		</dict>
		<key>other-keyword</key>
		<dict>
			<key>comment</key>
			<string>Remove parent or do sth that the paren isn't highlighted</string>
			<key>match</key>
			<string>\b(forall|(at\s+(start|end))|over)\b</string>
			<key>name</key>
			<string>support.other.pddl</string>
		</dict>
		<key>pddl-expr</key>
		<dict>
			<key>match</key>
			<string>(?!(\?.*))((?:\w|-)+)</string>
			<key>name</key>
			<string>string.unquoted.pddl</string>
		</dict>
		<key>precondition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>:precondition\s*</string>
					<key>end</key>
					<string>\b</string>
					<key>name</key>
					<string>entity.name.function.pddl</string>
				</dict>
			</array>
		</dict>
		<key>predicate</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.pddl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.pddl</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.pddl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\((\w+)|(?!^)\G)(?:(?=(?:(?!\(\w+).)*\))[^?\w])*(?:(\?\w+)|(\w+)|\))</string>
			<key>name</key>
			<string>meta.type.pddl</string>
		</dict>
		<key>predicates</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:predicates))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Predicates</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#new-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>problem</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((\b(?i:define)\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function-type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>domain/problem definition &lt;domain&gt; &lt;problem&gt; </string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.function.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.function.pddl</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>entity.name.class.pddl</string>
								</dict>
								<key>8</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s+(\()(\b(?i:(problem))\b)(\s*)((\w|\-|\!|\?)*)(\s*)((\w|\-)*)</string>
							<key>name</key>
							<string>meta.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>requirement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:requirements))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Requirement</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>:(strips|typing|negative-preconditions|disjunctive-preconditions|equality|existential-preconditions|universal-preconditions|quantified-preconditions|conditional-effects|fluents|numeric-fluents|object-fluents|adl|durative-actions|duration-inequalities|continuous-effects|derived-predicates|timed-initial-literals|preferences|constraints|action-costs)</string>
							<key>name</key>
							<string>meta.keyword.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>typed-variable-list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((\?((?:\w|-)+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>-\s+((?:\w|-)+)</string>
							<key>name</key>
							<string>meta.name.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:types))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Types</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>string.unquoted.pddl</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>((\s*\w+\s+)+)(-)\s+(\w+)\s*</string>
							<key>name</key>
							<string>meta.keyword.pddl</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#either</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>match</key>
			<string>\?((?:\w|-)+)</string>
			<key>name</key>
			<string>keyword.other.pddl</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.pddl</string>
	<key>uuid</key>
	<string>2aef09fc-d29e-4efd-bf1a-974598feb7a9</string>
</dict>
</plist>
