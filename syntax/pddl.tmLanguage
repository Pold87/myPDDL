<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>pddl</string>
	</array>
	<key>name</key>
	<string>PDDL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#problem</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#domain</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>action</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:action))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Action</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typed-variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action-keyword</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#built-in-var</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>action-keyword</key>
		<dict>
			<key>match</key>
			<string>:(?i:(parameters|vars|precondition|effect))(?!:|\?)\b</string>
			<key>name</key>
			<string>keyword.operator.pddl</string>
		</dict>
		<key>action-name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.unquoted.action.pddl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:^|\s+)([a-zA-Z](?:\w|-|_)*)(?!:|\?)\b</string>
		</dict>
		<key>any-sexpr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr-other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?:\s)*</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>any-sexpr-other</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?:\s)*</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>applied-predicate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate-other</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>applied-predicate-other</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>built-in-var</key>
		<dict>
			<key>match</key>
			<string>\?duration</string>
			<key>name</key>
			<string>variable.language.pddl</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>comment</key>
			<string>Comments beginning with ';'</string>
			<key>match</key>
			<string>;.*</string>
			<key>name</key>
			<string>comment.line.semicolon.pddl</string>
		</dict>
		<key>connected-predicate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((and|or|eq|neq|not|\=|\&gt;\=|\&lt;\=|\&lt;|\&gt;|assign|increase|decrease|scale-up|scale-down|forall|exists|imply|when|\+|-|\*|/)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Predicates that are connected via and, or, etc.</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#times</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typed-variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#connected-predicate-other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#number</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>connected-predicate-other</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((and|or|eq|neq|not|\=|\&gt;\=|\&lt;\=|\&lt;|\&gt;|assign|increase|decrease|scale-up|scale-down|forall|exists|imply|when|\+|-|\*|/)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Predicates that are connected via and, or, etc.</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#times</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typed-variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#number</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:constants))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Constants</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(-)(?:^|\s+)([a-zA-Z](?:\w|-|_)*)</string>
							<key>name</key>
							<string>meta.keyword.pddl</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#either</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>derived</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:derived))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Derived Predicate</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>domain</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*((?i:define))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>domain definition </string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.function.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#domain-name-in-define</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#requirement</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constants</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#predicates</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#derived</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#new-functions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#process</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#event</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#durative-action</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>domain-name-in-define</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(domain))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Domain name in problem file</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\s+(?:\w|-)+){2,}</string>
							<key>name</key>
							<string>invalid.illegal.pddl</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>domain-name-in-problem</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:domain))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Domain name in problem file</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\s+(?:\w|-)+){2,}</string>
							<key>name</key>
							<string>invalid.illegal.pddl</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>durative-action</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:durative-action))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Durative Action</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typed-variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#durative-action-keyword</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#built-in-var</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>durative-action-keyword</key>
		<dict>
			<key>match</key>
			<string>:(?i:(parameters|vars|duration|condition|effect))(?!:|\?)\b</string>
			<key>name</key>
			<string>keyword.operator.pddl</string>
		</dict>
		<key>either</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(-)\s+\((either)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.pddl</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>error</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.pddl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*((?:\w+|\?|_|-|\.))\s*</string>
		</dict>
		<key>event</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:event))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Event</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typed-variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action-keyword</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#built-in-var</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\)\s+-\s+((?:\w|-)+))</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>-\s+((?:\w|-)+)</string>
							<key>name</key>
							<string>meta.name.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-keyword</key>
		<dict>
			<key>comment</key>
			<string>Function keywords that can be used in the effect of an action</string>
			<key>match</key>
			<string>(assign|scale-up|scale-down|increase|decrease)</string>
			<key>name</key>
			<string>support.function.pddl</string>
		</dict>
		<key>function-with-either</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((\w+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\)\s+-\s+((?:\w|-)+))|\)</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>-\s+((?:\w|-)+)</string>
							<key>name</key>
							<string>meta.name.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:functions))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Functions</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\((either)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.type.pddl</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#pddl-expr</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>goal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:goal))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Goal</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>init-predicate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#number</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#init-predicate-other</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>init-predicate-other</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#number</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#init-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>inits</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:init))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Initalized predicates</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#init-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>metric</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:metric))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Metric</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#optimization</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#number</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>new-functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:functions))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Functions</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#either</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>comment</key>
			<string>Numeric values</string>
			<key>match</key>
			<string>\b\d*\.?\d*\b</string>
			<key>name</key>
			<string>constant.numeric.pddl</string>
		</dict>
		<key>objects</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:objects))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Objects</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(-)(?:^|\s+)([a-zA-Z](?:\w|-|_)*)</string>
							<key>name</key>
							<string>meta.keyword.pddl</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#either</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>optimization</key>
		<dict>
			<key>match</key>
			<string>(minimize|maximize)</string>
			<key>name</key>
			<string>keyword.other.pddl</string>
		</dict>
		<key>pddl-expr</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.unquoted.pddl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:^|\s+)([a-zA-Z](?:\w|-|_)*)(?!:|\?)\b</string>
		</dict>
		<key>precondition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>:precondition\s*</string>
					<key>end</key>
					<string>\b</string>
					<key>name</key>
					<string>entity.name.function.pddl</string>
				</dict>
			</array>
		</dict>
		<key>predicate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*((?:\w|-)+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#either</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.character.pddl</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(-)(?:^|\s+)([a-zA-Z](?:\w|-|_)*)</string>
							<key>name</key>
							<string>meta.name.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>predicates</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:predicates))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Predicates</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>problem</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*((?i:define))\b(?!\s+\(domain)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function-type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>problem definition</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.function.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#problem-name-in-define</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#domain-name-in-problem</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#inits</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#objects</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#goal</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#metric</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>problem-name-in-define</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(problem))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Domain name in problem file</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\s+(?:\w|-)+){2,}</string>
							<key>name</key>
							<string>invalid.illegal.pddl</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>process</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:process))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Process</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typed-variable-list</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#action-keyword</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#built-in-var</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>requirement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:requirements))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Requirement</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.requirement.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>match</key>
							<string>:(?i:(strips|typing|negative-preconditions|disjunctive-preconditions|equality|existential-preconditions|universal-preconditions|quantified-preconditions|conditional-effects|fluents|numeric-fluents|object-fluents|adl|durative-actions|duration-inequalities|continuous-effects|derived-predicates|timed-initial-literals|preferences|constraints|action-costs))\b</string>
							<key>name</key>
							<string>keyword.other.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>times</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((forall|(at(\s+(start|end)))|over(\s+all)?)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#connected-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#applied-predicate</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>typed-variable-list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\((\?((?:\w|-|_)+))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.pddl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.character.pddl</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pddl</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(-)(?:^|\s+)([a-zA-Z](?:\w|-|_)*)(?!:|\?)\b</string>
							<key>name</key>
							<string>meta.name.function.pddl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\s*(?i:(:types))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.pddl</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Types</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.type.pddl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.character.pddl</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.pdd</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(-)(?:^|\s+)([a-zA-Z](?:\w|-|_)*)</string>
							<key>name</key>
							<string>meta.keyword.pddl</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#either</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pddl-expr</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any-sexpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>match</key>
			<string>(?:^|\s+)(\?[a-zA-Z](?:\w|-|_)*)</string>
			<key>name</key>
			<string>keyword.other.pddl</string>
		</dict>
		<key>variable-list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.pddl</string>
	<key>uuid</key>
	<string>2aef09fc-d29e-4efd-bf1a-974598feb7a9</string>
</dict>
</plist>
